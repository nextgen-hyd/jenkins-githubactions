pipeline { 
    agent any 
    parameters {
        string(name: 'sourceCode_url', defaultValue: 'https://github.com/TCS/Nextgen.git', description: 'Enter Repository URL here')
        string(name: 'branch', defaultValue: 'DevOps', description: 'Enter Branch name here')
        choice(name: 'sourceCode_language', choices: ['Java'], description: 'Select Source Code Language')
        choice(name: 'build_tool', choices: ['Maven'], description: 'Select Build Tool')
        choice(name: 'code_quality_analysis', choices: ['SonarQube'], description: 'Select Code Quality Analysis Tool')
        string(name: 'dockertag', defaultValue: 'latest', description: 'Enter Docker image tag here')
        choice(name: 'environment', choices: ['DEV', 'QA', 'PROD'], description: 'Please select an environment to Deploy')
    }
    
    stages {
        stage('Git Clone') {
            steps {
                git branch: "${params.branch}", url: "DaggupatiPavan/java-web-app-docker", credentialsId: 'nextgen-devops-token'
            }
        }

        stage('Build') {
            tools {
                maven 'mvn3.6.3'
            }
            steps {
                sh 'mvn clean install'
                sh 'echo maven completed'
            }
        }

        stage('SonarQube') {
            steps {
                withSonarQubeEnv(credentialsId: 'sonarQube', installationName: 'QualityChecks') {
                    sh "mvn clean verify sonar:sonar -Dsonar.projectKey=genai -Dsonar.projectName='genai'"
                }
            }
        }

        stage('Test') {
            steps {
                sh 'mvn test'
            }
        }

        stage('Write Dockerfile') {
            steps {
                sh 'echo "FROM openjdk:8-jre" >> Dockerfile'
                sh 'echo "EXPOSE 8080" >> Dockerfile'
                sh 'echo "COPY target/*.jar /usr/src/myapp.jar" >> Dockerfile'
            }
        }

        stage('Docker Build') {
            steps {
                sh "docker build -t pavan176/webapp:v.0.1 ."
            }
        }

        stage('Push to DockerHub') {
            steps {
                script {
                    sh "docker push pavan176/webapp:v.0.1"
                }
            }
        }

        stage('Deploy as Pod') {
            steps {
                script {
                    sh "kubectl delete pod paltoalto || true"
                    sh "kubectl run paltoalto --image=pavan176/webapp:v.0.1"
                }
            }
        }
    }
}
