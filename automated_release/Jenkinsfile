pipeline {
    agent any
    
    triggers {
            cron('1 13 * * 1-5')
        }

    environment {
        // Define environment variables (e.g., version, repository URL)
        RELEASE_VERSION = "1.0.${BUILD_NUMBER}"
        GIT_REPO = 'https://github.com/your/repository.git'
        ARTIFACTORY_REPO = 'https://your.artifactory.com/repository'
    }
    
    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/AbhishekRaoV/ubiq.git'
            }
        }

        stage('Build') {
            steps {
                script {
                    // Perform the build (example for a Maven-based project)
                    sh 'mvn clean install'
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    // Run tests (example for Maven-based project)
                    sh 'mvn test'
                }
            }
        }

        stage('Versioning') {
            steps {
                script {
                    // Update the version number (example for Maven)
                    sh "mvn versions:set -DnewVersion=${RELEASE_VERSION}"
                }
            }
        }

        stage('Package') {
            steps {
                script {
                    // Package the project (example for Maven)
                    sh 'mvn clean package'
                }
            }
        }

        stage('Release') {
            steps {
                script {
                    // Upload the artifact to an artifact repository (e.g., Artifactory, Nexus)
                    sh "curl -u ${ARTIFACTORY_USER}:${ARTIFACTORY_PASSWORD} -T target/your-artifact-${RELEASE_VERSION}.jar ${ARTIFACTORY_REPO}/your-artifact-${RELEASE_VERSION}.jar"
                    
                    // Optionally, create a Git tag for the release
                    sh "git tag -a v${RELEASE_VERSION} -m 'Release version ${RELEASE_VERSION}'"
                    sh 'git push origin --tags'
                }
            }
        }
    }

    post {
        success {
            echo "Release ${RELEASE_VERSION} created successfully!"
        }

        failure {
            echo "Release creation failed."
        }
    }
}
